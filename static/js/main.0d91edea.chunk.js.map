{"version":3,"sources":["data.js","MapChart.js","index.js"],"names":["markers","markerOffset","name","coordinates","geoUrl","MapChart","setTooltipContent","useState","zoom","position","setPosition","projectionConfig","scale","center","onMoveEnd","geography","geographies","map","geo","rsmKey","filter","d","properties","REGION_UN","fill","stroke","r","strokeWidth","onMouseEnter","onMouseLeave","textAnchor","y","style","fontFamily","fontSize","className","onClick","pos","xmlns","width","height","viewBox","x1","y1","x2","y2","App","content","setContent","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0d91edea.chunk.js","sourcesContent":["const markers = \r\n[{markerOffset:7,name:\"Sao Paulo - AlmapBBDO 2018 Creative Cat.\", coordinates:[-46.6252, -23.5337]},\r\n {markerOffset:-7,name:\"Chicago - Starcom : 2020 Media Cat.; 2018 Effective Cat.\", coordinates:[-87.6862, 41.8373] },\r\n {markerOffset:7,name:\"London - MediaCom: 2018 Media Cat.\", coordinates:[-0.1275, 51.5072] },\r\n {markerOffset:7,name:\"New York - BBDO: 2019 Creative Cat.\", coordinates:[-73.9249, 40.6943] },\r\n {markerOffset:7,name:\"New Delhi - McCann: 2019 Effective Cat.\", coordinates:[77.2, 28.7] },\r\n {markerOffset:7,name:\"Tel Aviv - MediaCom Connections: 2019 Media Cat.\", coordinates:[34.8, 32.0833] },\r\n {markerOffset:7,name:\"Dubai - FP7 McCann: 2020 Effective Cat.\", coordinates:[55.3094, 25.2697] }]\r\n export default markers;","//import React from \"react\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup,\r\n  Marker\r\n} from \"react-simple-maps\";\r\nimport markers from \"./data\";\r\n//console.log(markers);\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n  \r\nconst MapChart = ({ setTooltipContent }) => {\r\n  const [position, setPosition] = useState({ coordinates: [0, 0], zoom: 1 });\r\n\r\n  function handleZoomIn() {\r\n    if (position.zoom >= 4) return;\r\n    setPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\r\n  }\r\n\r\n  function handleZoomOut() {\r\n    if (position.zoom <= 1) return;\r\n    setPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\r\n  }\r\n\r\n  function handleMoveEnd(position) {\r\n    setPosition(position);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <ComposableMap data-tip=\"\"\r\n                     projectionConfig={{ scale: 200 }}\r\n                     >\r\n        <ZoomableGroup\r\n          zoom={position.zoom}\r\n          center={position.coordinates}\r\n          onMoveEnd={handleMoveEnd}\r\n        >  \r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography key={geo.rsmKey} geography={geo} />\r\n              ))\r\n            }\r\n          </Geographies>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies\r\n                .filter(\r\n                  d =>\r\n                  d.properties.REGION_UN === \"Americas\" ||\r\n                  d.properties.REGION_UN === \"Europe\" ||\r\n                  d.properties.REGION_UN === \"Asia\"  ||\r\n                  d.properties.REGION_UN === \"Africa\" ||\r\n                  d.properties.REGION_UN === \"Oceania\" ||\r\n                  d.properties.REGION_UN === \"Antartica\"\r\n                )\r\n                .map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill=\"#EAEAEC\"\r\n                  stroke=\"#D6D6DA\"\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n          {markers.map(({ name, coordinates, markerOffset }) => (\r\n            <Marker key={name} coordinates={coordinates}>\r\n              <circle r={4} fill=\"#09ff00\" stroke=\"#fff\" strokeWidth={2}\r\n                onMouseEnter={() => {\r\n                  setTooltipContent(`${name}`);\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setTooltipContent(\"\");\r\n                }}\r\n                />\r\n                <text\r\n                  textAnchor=\"right\"\r\n                  y={markerOffset}\r\n                  style={{fontFamily: \"system-ui\", fontSize: \"6\", fill: \"#5D5A6D\" }}\r\n                >\r\n                  {name}\r\n                </text>\r\n            </Marker>\r\n          ))}\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      <div className=\"controls\">\r\n        <button onClick={handleZoomIn}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"3\"\r\n          >\r\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\r\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\r\n          </svg>\r\n        </button>\r\n        <button onClick={handleZoomOut}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"3\"\r\n          >\r\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\r\n          </svg>\r\n        </button>\r\n      </div>           \r\n\r\n    </div>\r\n  );\r\n};\r\n//});\r\n\r\nexport default MapChart;\r\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport './styles.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport MapChart from \"./MapChart\";\n\n//ReactDOM.render(\n//  <React.StrictMode>\n//    <App />\n//  </React.StrictMode>,\n//  document.getElementById('root')\n//);\n\n//import \"./index.css\";\n\n//import MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n      <ReactTooltip>{content}</ReactTooltip>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}